---

- name: save host to inventory
  uri:
    url: "{{ bw_awx_host }}/api/v2/inventories/{{ bw_awx_inventory_id }}/hosts/"
    user: "{{ bw_awx_admin_user }}"
    password: "{{ bw_awx_admin_password }}"
    method: POST
    validate_certs: false
    return_content: yes
    force_basic_auth: yes
    status_code: 201
    headers:
      Accept: "application/json"
    body_format: json
    body: "{\"inventory\": {{ bw_awx_inventory_id }},\"name\":\"{{ ip_address }}\", \"variables\": \"ansible_port: {{ bw_awx_host_port }}\\nansible_user: {{ bw_awx_host_username }}\\nansible_become: {{ bw_awx_host_become }}\"}"
  ignore_errors: yes
  register: _addhost_result
  when: (bw_awx_cmd is defined) and (bw_awx_cmd == "add_host")
  
- name: get id of the host for deletion
  uri:
    url: "{{ bw_awx_host }}/api/v2/inventories/{{ bw_awx_inventory_id }}/hosts?search={{ip_address}}"
    user: "{{ bw_awx_admin_user }}"
    password: "{{ bw_awx_admin_password }}"
    method: GET
    validate_certs: false
    return_content: yes
    force_basic_auth: yes
    status_code: 200
    headers:
      Accept: "application/json"
    body_format: json
  ignore_errors: yes
  register: _findhost_result
  when: (bw_awx_cmd is defined) and (bw_awx_cmd == "del_host")

- name: set fact
  set_fact:
    _awx_id: "{{_findhost_result}}"
  when: (_findhost_result is defined)
  
- debug:
    msg: "{{ _findhost_result }}"
    
- name: Set Stats for Workflow
  set_stats:
    data:
      ip_address: "{{ ip_address }}"
  when: (ip_address is defined)